@page
@model WebRazorPages1.Pages.IndexModel
@{
    ViewData["Title"] = "Inicio";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="titulo-seccion text-light m-0">TAREAS ASIGNADAS</h2>
        <form method="get" class="d-flex align-items-center gap-2">
            <label for="cantidadRegistrosPorPagina" class="text-light m-0 text-nowrap">Tareas por página</label>
            <input
                id="cantidadRegistrosPorPagina"
                name="cantidadRegistrosPorPagina"
                class="form-control form-control-sm"
                type="number"
                min="1"
                max="99"
                maxlength="2"
                inputmode="numeric"
                placeholder="5"
                value="@(Model.CantidadDeRegistrosPorPagina)"
                oninput="this.value = this.value.replace(/\D/g,'').slice(0,2)"
                style="width: 70px;"
            />
            <input type="hidden" name="q" value="@(Model.TextoDeBusqueda)" />
            <input type="hidden" name="pagina" value="1" />
            <button type="submit" class="btn btn-sm btn-primary text-nowrap">👁️ Aplicar</button>
            <button class="btn btn-sm btn-success text-nowrap">➕ Nueva Tarea</button>
        </form>
    </div>

    <div class="d-flex justify-content-start align-items-center mb-3">
        <form id="formulario-busqueda" method="get" class="d-flex align-items-center gap-2">
            <label for="q" class="text-light m-0 text-nowrap">Buscar</label>
            <input
                id="q"
                name="q"
                class="form-control form-control-sm"
                type="search"
                value="@(Model.TextoDeBusqueda)"
                placeholder="🔍 Escribe para filtrar…"
                autocomplete="off"
                style="width: 250px;"
            />
            <input type="hidden" name="cantidadRegistrosPorPagina" value="@(Model.CantidadDeRegistrosPorPagina)" />
            <input type="hidden" name="pagina" value="1" />
        </form>
    </div>

    <div class="card-tabla p-3">
        <nav class="mt-3">
            <ul class="pagination justify-content-center flex-wrap">
                @for (int i = 1; i <= Model.CantidadTotalDePaginas; i++)
                {
                    <li class="page-item @(i == Model.NumeroDePaginaActual ? "active" : "")">
                        <a class="page-link"
                           asp-page="./Index"
                           asp-route-pagina="@i"
                           asp-route-cantidadRegistrosPorPagina="@Model.CantidadDeRegistrosPorPagina"
                           asp-route-filtroEstado="@Model.FiltroEstado"
                           asp-route-q="@(Model.TextoDeBusqueda)">
                            @i
                        </a>
                    </li>
                }
            </ul>
        </nav>

        <div class="table-responsive">
            <table class="table table-bordered table-hover text-center mb-0">
                <thead>
                    <tr>
                        <th class="text-white">Nombre Tarea</th>
                        <th class="text-white">Fecha Vencimiento</th>
                        <th class="text-white">Estado</th>
                        <th class="text-white">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var tarea in Model.ListaDeTareasDeLaPagina)
                {
                    <tr>
                        <td class="text-white">@tarea.NombreDeLaTarea</td>
                        <td class="text-white">@tarea.FechaDeVencimiento</td>
                        <td class="text-white">
                            <span class="badge @(tarea.EstadoDeLaTarea switch {
                                "Pendiente" => "bg-warning text-dark",
                                "En curso" => "bg-info text-dark",
                                "Finalizado" => "bg-success text-dark",
                                "Cancelado" => "bg-danger text-dark",
                                _ => "bg-secondary"
                            })">
                                @tarea.EstadoDeLaTarea
                            </span>
                        </td>
                        <td class="d-flex justify-content-center gap-2">
                            <button class="btn btn-sm btn-success">✅ Editar</button>
                            <button class="btn btn-sm btn-danger">🗑️ Eliminar</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts{
<script>
(() => {
    const formularioBusqueda = document.getElementById('formulario-busqueda');
    const campoBusqueda = document.getElementById('q');
    let temporizadorEspera;
    const retardoMilisegundos = 600;

    if (formularioBusqueda && campoBusqueda) {
        campoBusqueda.addEventListener('input', () => {
            clearTimeout(temporizadorEspera);
            temporizadorEspera = setTimeout(() => {
                // Cambiar a página 1 al buscar
                document.querySelector('input[name="pagina"]').value = "1";
                formularioBusqueda.submit();
            }, retardoMilisegundos);
        });
    }
})();
</script>
}
